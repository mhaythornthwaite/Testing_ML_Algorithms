{"paragraphs":[{"text":"%md\n\nLet's start by loading up a subset of real Wikipedia data that I've placed in S3 for you already:\n","user":"anonymous","dateUpdated":"2019-09-20T18:23:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Let&rsquo;s start by loading up a subset of real Wikipedia data that I&rsquo;ve placed in S3 for you already:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569002930160_-1615694295","id":"20190920-180850_1654831926","dateCreated":"2019-09-20T18:08:50+0000","dateStarted":"2019-09-20T18:23:52+0000","dateFinished":"2019-09-20T18:23:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:19429"},{"text":"%spark.pyspark\n\nrawData = spark.read.options(sep=\"\\t\").csv(\"s3://sundog-spark/subset-small.tsv\")\nrawData.show()","user":"anonymous","dateUpdated":"2019-09-20T18:23:52+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------------+-------------------+--------------------+\n|_c0|                 _c1|                _c2|                 _c3|\n+---+--------------------+-------------------+--------------------+\n| 12|           Anarchism|2008-12-30 06:23:05|Anarchism (someti...|\n| 25|              Autism|2008-12-24 20:41:05|Autism is a brain...|\n| 39|              Albedo|2008-12-29 18:19:09|The albedo of an ...|\n|290|                   A|2008-12-27 04:33:16|The letter A is t...|\n|303|             Alabama|2008-12-29 08:15:47|Alabama (formally...|\n|305|            Achilles|2008-12-30 06:18:01|thumb\\n\\nIn Greek...|\n|307|     Abraham Lincoln|2008-12-28 20:18:23|Abraham Lincoln (...|\n|308|           Aristotle|2008-12-29 23:54:48|Aristotle (Greek:...|\n|309|An American in Paris|2008-09-27 19:29:28|An American in Pa...|\n|324|       Academy Award|2008-12-28 17:50:43|The Academy Award...|\n|330|             Actrius|2008-05-23 15:24:32|Actrius (Actresse...|\n|332|     Animalia (book)|2008-12-18 11:12:34|thumbAnimalia (IS...|\n|334|International Ato...|2008-11-21 22:40:20|International Ato...|\n|336|            Altruism|2008-12-27 03:57:17|Altruism is selfl...|\n|339|            Ayn Rand|2008-12-30 08:03:06|Ayn Rand (,  – Ma...|\n|340|        Alain Connes|2008-09-03 13:41:39|Alain Connes (bor...|\n|344|          Allan Dwan|2008-11-14 05:28:58|Allan Dwan (April...|\n|358|             Algeria|2008-12-29 02:54:36|Algeria (, al-Jaz...|\n|359|List of character...|2008-12-23 20:20:21|This is a list of...|\n|569|        Anthropology|2008-12-28 23:04:30|Anthropology (, f...|\n+---+--------------------+-------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=418","http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=419"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568987608657_423076963","id":"20190919-161908_2032716933","dateCreated":"2019-09-20T13:53:28+0000","dateStarted":"2019-09-20T18:23:52+0000","dateFinished":"2019-09-20T18:23:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19430"},{"text":"%md\n\nSeems there are no column names in the source data, so we'll have to add them in ourselves:","user":"anonymous","dateUpdated":"2019-09-20T18:23:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Seems there are no column names in the source data, so we&rsquo;ll have to add them in ourselves:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569002985790_1170967192","id":"20190920-180945_494109303","dateCreated":"2019-09-20T18:09:45+0000","dateStarted":"2019-09-20T18:23:53+0000","dateFinished":"2019-09-20T18:23:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19431"},{"text":"%spark.pyspark\n\narticles = rawData.toDF(\"ID\", \"Title\", \"Time\", \"Document\")\narticles.show()","user":"anonymous","dateUpdated":"2019-09-20T18:23:53+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------------+-------------------+--------------------+\n| ID|               Title|               Time|            Document|\n+---+--------------------+-------------------+--------------------+\n| 12|           Anarchism|2008-12-30 06:23:05|Anarchism (someti...|\n| 25|              Autism|2008-12-24 20:41:05|Autism is a brain...|\n| 39|              Albedo|2008-12-29 18:19:09|The albedo of an ...|\n|290|                   A|2008-12-27 04:33:16|The letter A is t...|\n|303|             Alabama|2008-12-29 08:15:47|Alabama (formally...|\n|305|            Achilles|2008-12-30 06:18:01|thumb\\n\\nIn Greek...|\n|307|     Abraham Lincoln|2008-12-28 20:18:23|Abraham Lincoln (...|\n|308|           Aristotle|2008-12-29 23:54:48|Aristotle (Greek:...|\n|309|An American in Paris|2008-09-27 19:29:28|An American in Pa...|\n|324|       Academy Award|2008-12-28 17:50:43|The Academy Award...|\n|330|             Actrius|2008-05-23 15:24:32|Actrius (Actresse...|\n|332|     Animalia (book)|2008-12-18 11:12:34|thumbAnimalia (IS...|\n|334|International Ato...|2008-11-21 22:40:20|International Ato...|\n|336|            Altruism|2008-12-27 03:57:17|Altruism is selfl...|\n|339|            Ayn Rand|2008-12-30 08:03:06|Ayn Rand (,  – Ma...|\n|340|        Alain Connes|2008-09-03 13:41:39|Alain Connes (bor...|\n|344|          Allan Dwan|2008-11-14 05:28:58|Allan Dwan (April...|\n|358|             Algeria|2008-12-29 02:54:36|Algeria (, al-Jaz...|\n|359|List of character...|2008-12-23 20:20:21|This is a list of...|\n|569|        Anthropology|2008-12-28 23:04:30|Anthropology (, f...|\n+---+--------------------+-------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=420"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568987608663_298434694","id":"20190919-161933_473522612","dateCreated":"2019-09-20T13:53:28+0000","dateStarted":"2019-09-20T18:23:53+0000","dateFinished":"2019-09-20T18:23:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19432"},{"text":"%md\n\nNext we need to \"clean\" our data. We know TF/IDF can't handle null documents, so let's start by at least checking for that:","user":"anonymous","dateUpdated":"2019-09-20T18:23:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Next we need to &ldquo;clean&rdquo; our data. We know TF/IDF can&rsquo;t handle null documents, so let&rsquo;s start by at least checking for that:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569003017126_869503845","id":"20190920-181017_61885597","dateCreated":"2019-09-20T18:10:17+0000","dateStarted":"2019-09-20T18:23:54+0000","dateFinished":"2019-09-20T18:23:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19433"},{"text":"%spark.pyspark\n\narticles.filter(articles.Document.isNull()).count()","user":"anonymous","dateUpdated":"2019-09-20T18:23:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=421"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1569002715418_304870871","id":"20190920-180515_53110340","dateCreated":"2019-09-20T18:05:15+0000","dateStarted":"2019-09-20T18:23:54+0000","dateFinished":"2019-09-20T18:23:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19434"},{"text":"%md\n\nLooks like there is one article that contains a null document. As it's only one and it's pretty clearly corrupt, we can just drop it and call it a day:","user":"anonymous","dateUpdated":"2019-09-20T18:23:55+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Looks like there is one article that contains a null document. As it&rsquo;s only one and it&rsquo;s pretty clearly corrupt, we can just drop it and call it a day:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569003048964_1948656554","id":"20190920-181048_2018791814","dateCreated":"2019-09-20T18:10:48+0000","dateStarted":"2019-09-20T18:23:55+0000","dateFinished":"2019-09-20T18:23:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19435"},{"text":"%spark.pyspark\n\ncleanedArticles = articles.filter(articles.Document.isNotNull())\n\ncleanedArticles.filter(cleanedArticles.Document.isNull()).count()","user":"anonymous","dateUpdated":"2019-09-20T18:23:55+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=422"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1569002745242_1041345755","id":"20190920-180545_399141225","dateCreated":"2019-09-20T18:05:45+0000","dateStarted":"2019-09-20T18:23:55+0000","dateFinished":"2019-09-20T18:23:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19436"},{"text":"%md\n\nTF/IDF wants numbers, not words. So we need to pre-process our data before we can run any fun algorithms on it. We'll first tokenize the articles to split up them up into an array of individual words, and hash each word to a numeric value. The resulting hashed words will be stored in a sparse vector that is now a numeric representation of the words in each article.","user":"anonymous","dateUpdated":"2019-09-20T18:23:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>TF/IDF wants numbers, not words. So we need to pre-process our data before we can run any fun algorithms on it. We&rsquo;ll first tokenize the articles to split up them up into an array of individual words, and hash each word to a numeric value. The resulting hashed words will be stored in a sparse vector that is now a numeric representation of the words in each article.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569003097082_-1780991674","id":"20190920-181137_1226572311","dateCreated":"2019-09-20T18:11:37+0000","dateStarted":"2019-09-20T18:23:56+0000","dateFinished":"2019-09-20T18:23:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19437"},{"text":"%spark.pyspark\n\nfrom pyspark.ml.feature import HashingTF, IDF, Tokenizer\n\ntokenizer = Tokenizer(inputCol=\"Document\", outputCol=\"words\")\nwordsData = tokenizer.transform(cleanedArticles)\n\nhashingTF = HashingTF(inputCol=\"words\", outputCol=\"rawFeatures\")\nfeaturizedData = hashingTF.transform(wordsData)\nfeaturizedData.show()","user":"anonymous","dateUpdated":"2019-09-20T18:23:56+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------------+-------------------+--------------------+--------------------+--------------------+\n| ID|               Title|               Time|            Document|               words|         rawFeatures|\n+---+--------------------+-------------------+--------------------+--------------------+--------------------+\n| 12|           Anarchism|2008-12-30 06:23:05|Anarchism (someti...|[anarchism, (some...|(262144,[170,619,...|\n| 25|              Autism|2008-12-24 20:41:05|Autism is a brain...|[autism, is, a, b...|(262144,[29,405,5...|\n| 39|              Albedo|2008-12-29 18:19:09|The albedo of an ...|[the, albedo, of,...|(262144,[170,373,...|\n|290|                   A|2008-12-27 04:33:16|The letter A is t...|[the, letter, a, ...|(262144,[4155,478...|\n|303|             Alabama|2008-12-29 08:15:47|Alabama (formally...|[alabama, (formal...|(262144,[115,322,...|\n|305|            Achilles|2008-12-30 06:18:01|thumb\\n\\nIn Greek...|[thumb\\n\\nin, gre...|(262144,[112,170,...|\n|307|     Abraham Lincoln|2008-12-28 20:18:23|Abraham Lincoln (...|[abraham, lincoln...|(262144,[115,440,...|\n|308|           Aristotle|2008-12-29 23:54:48|Aristotle (Greek:...|[aristotle, (gree...|(262144,[170,232,...|\n|309|An American in Paris|2008-09-27 19:29:28|An American in Pa...|[an, american, in...|(262144,[1441,236...|\n|324|       Academy Award|2008-12-28 17:50:43|The Academy Award...|[the, academy, aw...|(262144,[68,403,5...|\n|330|             Actrius|2008-05-23 15:24:32|Actrius (Actresse...|[actrius, (actres...|(262144,[4200,963...|\n|332|     Animalia (book)|2008-12-18 11:12:34|thumbAnimalia (IS...|[thumbanimalia, (...|(262144,[5125,524...|\n|334|International Ato...|2008-11-21 22:40:20|International Ato...|[international, a...|(262144,[925,1846...|\n|336|            Altruism|2008-12-27 03:57:17|Altruism is selfl...|[altruism, is, se...|(262144,[813,914,...|\n|339|            Ayn Rand|2008-12-30 08:03:06|Ayn Rand (,  – Ma...|[ayn, rand, (,, ,...|(262144,[149,170,...|\n|340|        Alain Connes|2008-09-03 13:41:39|Alain Connes (bor...|[alain, connes, (...|(262144,[1227,421...|\n|344|          Allan Dwan|2008-11-14 05:28:58|Allan Dwan (April...|[allan, dwan, (ap...|(262144,[632,2366...|\n|358|             Algeria|2008-12-29 02:54:36|Algeria (, al-Jaz...|[algeria, (,, al-...|(262144,[131,282,...|\n|359|List of character...|2008-12-23 20:20:21|This is a list of...|[this, is, a, lis...|(262144,[14,19,18...|\n|569|        Anthropology|2008-12-28 23:04:30|Anthropology (, f...|[anthropology, (,...|(262144,[170,510,...|\n+---+--------------------+-------------------+--------------------+--------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=423"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568987608665_912292133","id":"20190919-163105_1685388362","dateCreated":"2019-09-20T13:53:28+0000","dateStarted":"2019-09-20T18:23:56+0000","dateFinished":"2019-09-20T18:23:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19438"},{"text":"%md\n\nThat hashing operation basically computed term frequencies for us by storing how often each hashed word occurred in each article. So we have TF, but we want TF/IDF to get measures of relevancy. the IDF package from Spark's ML library will compute TF/IDF for every term in every document for us. We'll store these final scores in a new column called \"features\", which is a sparse vector containing TF/IDF scores for each feature - a feature being a word.","user":"anonymous","dateUpdated":"2019-09-20T18:23:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>That hashing operation basically computed term frequencies for us by storing how often each hashed word occurred in each article. So we have TF, but we want TF/IDF to get measures of relevancy. the IDF package from Spark&rsquo;s ML library will compute TF/IDF for every term in every document for us. We&rsquo;ll store these final scores in a new column called &ldquo;features&rdquo;, which is a sparse vector containing TF/IDF scores for each feature - a feature being a word.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569003184312_-578169234","id":"20190920-181304_1635234839","dateCreated":"2019-09-20T18:13:04+0000","dateStarted":"2019-09-20T18:23:57+0000","dateFinished":"2019-09-20T18:23:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19439"},{"text":"%spark.pyspark\n\nidf = IDF(inputCol=\"rawFeatures\", outputCol=\"features\")\nidfModel = idf.fit(featurizedData)\nrescaledData = idfModel.transform(featurizedData)","user":"anonymous","dateUpdated":"2019-09-20T18:23:57+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=424"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568987608671_451890123","id":"20190919-163911_404568739","dateCreated":"2019-09-20T13:53:28+0000","dateStarted":"2019-09-20T18:23:57+0000","dateFinished":"2019-09-20T18:24:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19440"},{"text":"%spark.pyspark\n\nrescaledData.show()\n","user":"anonymous","dateUpdated":"2019-09-20T18:24:05+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+\n| ID|               Title|               Time|            Document|               words|         rawFeatures|            features|\n+---+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+\n| 12|           Anarchism|2008-12-30 06:23:05|Anarchism (someti...|[anarchism, (some...|(262144,[170,619,...|(262144,[170,619,...|\n| 25|              Autism|2008-12-24 20:41:05|Autism is a brain...|[autism, is, a, b...|(262144,[29,405,5...|(262144,[29,405,5...|\n| 39|              Albedo|2008-12-29 18:19:09|The albedo of an ...|[the, albedo, of,...|(262144,[170,373,...|(262144,[170,373,...|\n|290|                   A|2008-12-27 04:33:16|The letter A is t...|[the, letter, a, ...|(262144,[4155,478...|(262144,[4155,478...|\n|303|             Alabama|2008-12-29 08:15:47|Alabama (formally...|[alabama, (formal...|(262144,[115,322,...|(262144,[115,322,...|\n|305|            Achilles|2008-12-30 06:18:01|thumb\\n\\nIn Greek...|[thumb\\n\\nin, gre...|(262144,[112,170,...|(262144,[112,170,...|\n|307|     Abraham Lincoln|2008-12-28 20:18:23|Abraham Lincoln (...|[abraham, lincoln...|(262144,[115,440,...|(262144,[115,440,...|\n|308|           Aristotle|2008-12-29 23:54:48|Aristotle (Greek:...|[aristotle, (gree...|(262144,[170,232,...|(262144,[170,232,...|\n|309|An American in Paris|2008-09-27 19:29:28|An American in Pa...|[an, american, in...|(262144,[1441,236...|(262144,[1441,236...|\n|324|       Academy Award|2008-12-28 17:50:43|The Academy Award...|[the, academy, aw...|(262144,[68,403,5...|(262144,[68,403,5...|\n|330|             Actrius|2008-05-23 15:24:32|Actrius (Actresse...|[actrius, (actres...|(262144,[4200,963...|(262144,[4200,963...|\n|332|     Animalia (book)|2008-12-18 11:12:34|thumbAnimalia (IS...|[thumbanimalia, (...|(262144,[5125,524...|(262144,[5125,524...|\n|334|International Ato...|2008-11-21 22:40:20|International Ato...|[international, a...|(262144,[925,1846...|(262144,[925,1846...|\n|336|            Altruism|2008-12-27 03:57:17|Altruism is selfl...|[altruism, is, se...|(262144,[813,914,...|(262144,[813,914,...|\n|339|            Ayn Rand|2008-12-30 08:03:06|Ayn Rand (,  – Ma...|[ayn, rand, (,, ,...|(262144,[149,170,...|(262144,[149,170,...|\n|340|        Alain Connes|2008-09-03 13:41:39|Alain Connes (bor...|[alain, connes, (...|(262144,[1227,421...|(262144,[1227,421...|\n|344|          Allan Dwan|2008-11-14 05:28:58|Allan Dwan (April...|[allan, dwan, (ap...|(262144,[632,2366...|(262144,[632,2366...|\n|358|             Algeria|2008-12-29 02:54:36|Algeria (, al-Jaz...|[algeria, (,, al-...|(262144,[131,282,...|(262144,[131,282,...|\n|359|List of character...|2008-12-23 20:20:21|This is a list of...|[this, is, a, lis...|(262144,[14,19,18...|(262144,[14,19,18...|\n|569|        Anthropology|2008-12-28 23:04:30|Anthropology (, f...|[anthropology, (,...|(262144,[170,510,...|(262144,[170,510,...|\n+---+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=425"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568987608673_1556153757","id":"20190919-170922_1311341956","dateCreated":"2019-09-20T13:53:28+0000","dateStarted":"2019-09-20T18:24:05+0000","dateFinished":"2019-09-20T18:24:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19441"},{"text":"%md\n\nSo, let's use this to do a \"search\" for the term \"Gettysburg.\" Again, we need numbers, not words - so the first thing we need to do is figure out what hash value \"gettysburg\" maps to. This is surprisingly difficult, but will be easier in Spark 3.","user":"anonymous","dateUpdated":"2019-09-20T18:24:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>So, let&rsquo;s use this to do a &ldquo;search&rdquo; for the term &ldquo;Gettsburg.&rdquo; Again, we need numbers, not words - so the first thing we need to do is figure out what hash value &ldquo;gettysburg&rdquo; maps to. This is surprisingly difficult, but will be easier in Spark 3.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569003329799_-2126971975","id":"20190920-181529_1846595231","dateCreated":"2019-09-20T18:15:29+0000","dateStarted":"2019-09-20T18:24:05+0000","dateFinished":"2019-09-20T18:24:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19442"},{"text":"%spark.pyspark\n\nfrom pyspark.sql.types import *\n\nschema = StructType([StructField(\"words\", ArrayType(StringType()))])\n\ndf = spark.createDataFrame(([[[\"gettysburg\"]]]), schema).toDF(\"words\")\ndf.show()\n\ngettysburg = hashingTF.transform(df)\ngettysburg.show()\n\nfeatureVec = gettysburg.select('rawFeatures').collect()\nprint(featureVec)\n\ngettysburgID = int(featureVec[0].rawFeatures.indices[0])\nprint(gettysburgID)","user":"anonymous","dateUpdated":"2019-09-20T18:24:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------+\n|       words|\n+------------+\n|[gettysburg]|\n+------------+\n\n+------------+--------------------+\n|       words|         rawFeatures|\n+------------+--------------------+\n|[gettysburg]|(262144,[205433],...|\n+------------+--------------------+\n\n[Row(rawFeatures=SparseVector(262144, {205433: 1.0}))]\n205433\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=426","http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=427","http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=428","http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=429","http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=430"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568988051696_1482471322","id":"20190920-140051_48490882","dateCreated":"2019-09-20T14:00:51+0000","dateStarted":"2019-09-20T18:24:05+0000","dateFinished":"2019-09-20T18:24:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19443"},{"text":"%md\n\nOK, we have the magic number that represents \"Gettysburg.\" Now we can add another column - we'll call it \"score\" - that just extracts the TF/IDF score for Gettysburg from every article.","user":"anonymous","dateUpdated":"2019-09-20T18:24:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>OK, we have the magic number that represents &ldquo;Gettysburg.&rdquo; Now we can add another column - we&rsquo;ll call it &ldquo;score&rdquo; - that just extracts the TF/IDF score for Gettysburg from every article.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569003392516_-2100476689","id":"20190920-181632_1221085930","dateCreated":"2019-09-20T18:16:32+0000","dateStarted":"2019-09-20T18:24:07+0000","dateFinished":"2019-09-20T18:24:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19444"},{"text":"%spark.pyspark\n\n\nfrom pyspark.sql.types import FloatType\nfrom pyspark.sql.functions import udf\n\ntermExtractor = udf(lambda x: float(x[gettysburgID]), FloatType())\n\ngettysburgDF = rescaledData.withColumn('score', termExtractor(rescaledData.features))\ngettysburgDF.show()\n","user":"anonymous","dateUpdated":"2019-09-20T18:24:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+---------+\n| ID|               Title|               Time|            Document|               words|         rawFeatures|            features|    score|\n+---+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+---------+\n| 12|           Anarchism|2008-12-30 06:23:05|Anarchism (someti...|[anarchism, (some...|(262144,[170,619,...|(262144,[170,619,...|      0.0|\n| 25|              Autism|2008-12-24 20:41:05|Autism is a brain...|[autism, is, a, b...|(262144,[29,405,5...|(262144,[29,405,5...|      0.0|\n| 39|              Albedo|2008-12-29 18:19:09|The albedo of an ...|[the, albedo, of,...|(262144,[170,373,...|(262144,[170,373,...|      0.0|\n|290|                   A|2008-12-27 04:33:16|The letter A is t...|[the, letter, a, ...|(262144,[4155,478...|(262144,[4155,478...|      0.0|\n|303|             Alabama|2008-12-29 08:15:47|Alabama (formally...|[alabama, (formal...|(262144,[115,322,...|(262144,[115,322,...|      0.0|\n|305|            Achilles|2008-12-30 06:18:01|thumb\\n\\nIn Greek...|[thumb\\n\\nin, gre...|(262144,[112,170,...|(262144,[112,170,...|      0.0|\n|307|     Abraham Lincoln|2008-12-28 20:18:23|Abraham Lincoln (...|[abraham, lincoln...|(262144,[115,440,...|(262144,[115,440,...|33.128765|\n|308|           Aristotle|2008-12-29 23:54:48|Aristotle (Greek:...|[aristotle, (gree...|(262144,[170,232,...|(262144,[170,232,...|      0.0|\n|309|An American in Paris|2008-09-27 19:29:28|An American in Pa...|[an, american, in...|(262144,[1441,236...|(262144,[1441,236...|      0.0|\n|324|       Academy Award|2008-12-28 17:50:43|The Academy Award...|[the, academy, aw...|(262144,[68,403,5...|(262144,[68,403,5...|      0.0|\n|330|             Actrius|2008-05-23 15:24:32|Actrius (Actresse...|[actrius, (actres...|(262144,[4200,963...|(262144,[4200,963...|      0.0|\n|332|     Animalia (book)|2008-12-18 11:12:34|thumbAnimalia (IS...|[thumbanimalia, (...|(262144,[5125,524...|(262144,[5125,524...|      0.0|\n|334|International Ato...|2008-11-21 22:40:20|International Ato...|[international, a...|(262144,[925,1846...|(262144,[925,1846...|      0.0|\n|336|            Altruism|2008-12-27 03:57:17|Altruism is selfl...|[altruism, is, se...|(262144,[813,914,...|(262144,[813,914,...|      0.0|\n|339|            Ayn Rand|2008-12-30 08:03:06|Ayn Rand (,  – Ma...|[ayn, rand, (,, ,...|(262144,[149,170,...|(262144,[149,170,...|      0.0|\n|340|        Alain Connes|2008-09-03 13:41:39|Alain Connes (bor...|[alain, connes, (...|(262144,[1227,421...|(262144,[1227,421...|      0.0|\n|344|          Allan Dwan|2008-11-14 05:28:58|Allan Dwan (April...|[allan, dwan, (ap...|(262144,[632,2366...|(262144,[632,2366...|      0.0|\n|358|             Algeria|2008-12-29 02:54:36|Algeria (, al-Jaz...|[algeria, (,, al-...|(262144,[131,282,...|(262144,[131,282,...|      0.0|\n|359|List of character...|2008-12-23 20:20:21|This is a list of...|[this, is, a, lis...|(262144,[14,19,18...|(262144,[14,19,18...|      0.0|\n|569|        Anthropology|2008-12-28 23:04:30|Anthropology (, f...|[anthropology, (,...|(262144,[170,510,...|(262144,[170,510,...|      0.0|\n+---+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+---------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=431"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568992111535_1412687710","id":"20190920-150831_759727464","dateCreated":"2019-09-20T15:08:31+0000","dateStarted":"2019-09-20T18:24:07+0000","dateFinished":"2019-09-20T18:24:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19445"},{"text":"%md\n\nNow, all we have to do is sort our articles by score and we'll see the most relevant articles for Gettysburg!","user":"anonymous","dateUpdated":"2019-09-20T18:24:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Now, all we have to do is sort our articles by score and we&rsquo;ll see the most relevant articles for Gettysburg!</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569003521896_1262574813","id":"20190920-181841_1288180392","dateCreated":"2019-09-20T18:18:41+0000","dateStarted":"2019-09-20T18:24:09+0000","dateFinished":"2019-09-20T18:24:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19446"},{"text":"%spark.pyspark\n\nsortedResults = gettysburgDF.filter(\"score > 0\").orderBy('score', ascending=False).select('ID', 'Title', 'Document', 'score')\nsortedResults.show(truncate=100)","user":"anonymous","dateUpdated":"2019-09-20T18:24:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-30-0-195.ec2.internal:4040/jobs/job?id=432"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1568993550905_1658508289","id":"20190920-153230_1762338676","dateCreated":"2019-09-20T15:32:30+0000","dateStarted":"2019-09-20T18:24:09+0000","dateFinished":"2019-09-20T18:24:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19447","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+------------------+----------------------------------------------------------------------------------------------------+---------+\n|  ID|             Title|                                                                                            Document|    score|\n+----+------------------+----------------------------------------------------------------------------------------------------+---------+\n| 307|   Abraham Lincoln|Abraham Lincoln (February 12, 1809 – April 15, 1865) was the sixteenth President of the United St...|33.128765|\n|1135|   Abner Doubleday|Abner Doubleday (June 26, 1819 – January 26, 1893) was a career United States Army officer and Un...|27.607306|\n| 863|American Civil War|The American Civil War (1861–1865), also known as the War Between the States and several other na...|16.564383|\n+----+------------------+----------------------------------------------------------------------------------------------------+---------+\n\n"}]}},{"text":"%spark.pyspark\n","user":"anonymous","dateUpdated":"2019-09-20T18:07:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1569002022770_2110025432","id":"20190920-175342_171050402","dateCreated":"2019-09-20T17:53:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:19448"}],"name":"TF-IDF","id":"2EP3Q3A85","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}